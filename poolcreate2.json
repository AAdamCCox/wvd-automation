{
   "id":"msteams-pool",
   "vmSize":"standard_a2_v2",
   "virtualMachineConfiguration":{
      "imageReference":{
         "virtualMachineImageId": "<ImagePath>"
      },
      "nodeAgentSkuId":"batch.node.windows amd64",
      "windowsConfiguration":{
         "enableAutomaticUpdates":false
      },
      "nodePlacementConfiguration":{
         "policy":"regional"
      }
   },
   "networkConfiguration":{
      "publicIPAddressConfiguration":{
         "provision":"batchmanaged"
      }
   },
   "enableInterNodeCommunication":false,
   "taskSlotsPerNode":1,
   "taskSchedulingPolicy":{
      "nodeFillType":"pack"
   },
   "mountConfiguration": [
        {
            "azureFileShareConfiguration": {
                "accountName": "<StorageAccountName>"
				"accountKey": "<StorageAccountKey>",
                "azureFileUrl": "https://<StorageAccountName>.file.core.windows.net/<FileShareName>",
                "relativeMountPath": "S"
            }
        }
    ],
   "applicationPackageReferences": [
        {
            "applicationId": "test"
        }
    ],
   "certificateReferences": [
        {
            "thumbprint": "<CertThumbprint>",
            "thumbprintAlgorithm": "sha1",
            "storeLocation": "LocalMachine",
            "storeName": "My",
            "visibility": [
                "starttask",
                "task",
                "remoteuser"
            ]
        }
    ],
   "enableAutoScale": true,
   "autoScaleFormula": "startingNumberOfVMs = 0;\nmaxNumberofVMs = 5;\npendingTaskSamplePercent = $PendingTasks.GetSamplePercent(180 * TimeInterval_Second);\npendingTaskSamples = pendingTaskSamplePercent < 70 ? startingNumberOfVMs : avg($PendingTasks.GetSample(180 * TimeInterval_Second));\n$TargetDedicatedNodes=min(maxNumberofVMs, pendingTaskSamples);\n$NodeDeallocationOption = taskcompletion;",
   "autoScaleEvaluationInterval":"PT5M"
}
